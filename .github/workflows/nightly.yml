name: Nightly

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:
    inputs:
      justification:
        description: "Reason for manual run"
        required: true


jobs:
  nightly-windows-cli:
    name: Windows Nightly 
    runs-on: windows-latest
    env:
        SIMCDIR: ${{ github.workspace }}
        INSTALL: ${{ github.workspace }}\install
        uploadDir: ${{ github.workspace }}\upload
    strategy:
      matrix:
        architecture: [x64]
        targetConfiguration: [Release]
        include:
          - architecture: x64
            cl_architecture: x86_amd64

    steps:
      - uses: actions/checkout@v2
        with:
          repository: simulationcraft/simc
          ref: shadowlands

      - name: Get git hash
        id: git_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Add MSBuild and MS C++ Compiler to path
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.cl_architecture }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtwebengine

      - name: Create Install & Upload Directory
        run: |
          mkdir ${{ env.INSTALL }}
          mkdir ${{ env.uploadDir }}

      - name: Build
        env:
          SC_DEFAULT_APIKEY: ${{ secrets.SC_DEFAULT_APIKEY }}
        run: |
          $env:QTDIR = "$env:Qt5_DIR"
          $env:SZIP = "$env:ProgramFiles\7-Zip"
          $env:GITREV = "${{ steps.git_hash.outputs.sha_short }}"
          WinReleaseScripts\build-simc.bat ${{ matrix.targetConfiguration }} ${{ matrix.architecture }}
      
      - uses: actions/upload-artifact@v2
        with:
          name: simc-nightly-windows-${{ matrix.targetConfiguration }}-${{ matrix.architecture }}-${{ steps.git_hash.outputs.sha_short }}
          path: ${{ env.INSTALL }}\*.7z
      
      - name: Prepare FTP Upload
        run:  cp "${{ env.INSTALL }}\*.7z" "${{ env.uploadDir }}\"
          

      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@3.1.1
        with:
          ftp-server: ${{ secrets.UPLOAD_FTP_ADDRESS }}
          ftp-username: ${{ secrets.UPLOAD_USER }}
          ftp-password: ${{ secrets.UPLOAD_PASSWORD }}
          known-hosts: ${{ secrets.UPLOAD_KNOWN_HOSTS }}
          local-dir: ${{ env.uploadDir }}